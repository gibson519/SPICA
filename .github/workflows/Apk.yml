name: SPICA Assemble Debug

on:
  workflow_dispatch:

jobs:
  assemble:
    name: Assemble Debug APK
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      # ‚úÖ Step 1: Compile common sources and show only real Kotlin errors
      - name: Compile Common Metadata (Filtered Kotlin Errors)
        run: |
          echo "üîç Compiling commonMain to detect Kotlin code errors..."
          ./gradlew compileKotlinMetadata --stacktrace --info --warning-mode all 2>&1 | tee compile_log.txt

          # Find only actual Kotlin compiler error lines ("e: ")
          $errors = Select-String -Path compile_log.txt -Pattern "e: " | Where-Object {
            ($_ -notmatch "Cannot use Kotlin build script compile avoidance") -and
            ($_ -notmatch "Task ':") -and
            ($_ -notmatch "Gradle build daemon") -and
            ($_ -notmatch "Caching disabled") -and
            ($_ -notmatch "Execution stopped") -and
            ($_ -notmatch "Resolve mutations") -and
            ($_ -notmatch "Daemon") -and
            ($_ -notmatch "kmpPartiallyResolvedDependenciesChecker")
          }

          if ($errors) {
            echo ""
            echo "‚ùå Real Kotlin Compilation Errors Found:"
            echo "---------------------------------------"
            $errors | ForEach-Object { echo $_ }
            echo "---------------------------------------"
            exit 1
          } else {
            echo "‚úÖ No Kotlin source code errors detected in commonMain."
          }
        shell: pwsh

      # ‚úÖ Step 2: Assemble APK (only runs if no compile errors)
      - name: Assemble Android Debug APK
        run: ./gradlew :composeApp:assembleDebug --stacktrace --info --warning-mode all
        shell: bash

      # üì¶ Step 3: Upload generated APK (optional)
      - name: Upload Debug APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: SPICA-debug-apk
          path: composeApp/build/outputs/apk/debug/*.apk
