name: SPICA Assemble Debug

on:
  workflow_dispatch:

jobs:
  assemble:
    name: Assemble Debug APK
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-read-only: false

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      # ‚úÖ Step 1: Compile common sources and stop immediately if it fails
      - name: Compile Common Metadata (Unresolved Reference Check)
        run: |
          echo "üîç Compiling commonMain to detect unresolved references..."
          ./gradlew compileKotlinMetadata --stacktrace --info --warning-mode all 2>&1 | tee compile_log.txt
          if (Select-String -Path compile_log.txt -Pattern "unresolved reference" -SimpleMatch) {
            echo "‚ùå Unresolved references detected in commonMain!"
            exit 1
          }
        shell: pwsh

      # ‚úÖ Step 2: Assemble APK (only runs if step above passes)
      - name: Assemble Android Debug APK
        run: ./gradlew :composeApp:assembleDebug --stacktrace --info --warning-mode all
        shell: bash

      # üì¶ Step 3: Upload generated APK (optional)
      - name: Upload Debug APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: SPICA-debug-apk
          path: composeApp/build/outputs/apk/debug/*.apk
